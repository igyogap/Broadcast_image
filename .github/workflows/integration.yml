name: Python Broadcast Image Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Install MySQL client
      - name: Install MySQL client
        run: sudo apt-get install -y mysql-client

      # Run MySQL Docker container
      - name: Run MySQL Docker container
        run: |
            docker run --name mysql-container -e MYSQL_ROOT_PASSWORD=root_password -d mysql:8.0
            # Wait for MySQL to start
            sleep 30

      # Add test data to MySQL database
      - name: Add test data to database
        run: |
            docker exec -i mysql-container mysql -u root -proot_password -e "CREATE DATABASE IF NOT EXISTS broadcast;"
            docker exec -i mysql-container mysql -u root -proot_password -e "USE broadcast; CREATE TABLE IF NOT EXISTS users (id INT AUTO_INCREMENT PRIMARY KEY, chatid BIGINT, status_bc TINYINT DEFAULT 0 NOT NULL);"
            docker exec -i mysql-container mysql -u root -proot_password -e "USE broadcast; INSERT INTO users (chatid) VALUES (5228446974), (5228446974);"

      # Set up virtual environment
      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip

      # Install dependencies
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      # Run Python broadcast script
      - name: Run broadcast script
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: 'root_password'
          DB_NAME: broadcast
        run: |
          source venv/bin/activate
          python main.py
