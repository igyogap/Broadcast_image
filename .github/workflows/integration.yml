name: Python Broadcast Image Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Install MySQL client
      - name: Install MySQL client
        run: sudo apt-get install -y mysql-client

      # Run MySQL Docker container
      - name: Run MySQL Docker container
        id: mysql
        run: |
          docker run --name mysql-container -e MYSQL_ROOT_PASSWORD=root_password -e MYSQL_DATABASE=broadcast -d mysql:8.0
          # Wait for MySQL to start
          sleep 30

      # Get MySQL container's IP address dynamically
      - name: Get MySQL credentials
        id: get_mysql_creds
        run: |
          # Extract the IP address of the MySQL container
          DB_HOST=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mysql-container)
          DB_PORT=3306
          DB_USER=root
          DB_PASSWORD=root_password
          DB_NAME=broadcast

          # Output the environment variables as GitHub Actions outputs
          echo "DB_HOST=$DB_HOST" >> $GITHUB_ENV
          echo "DB_PORT=$DB_PORT" >> $GITHUB_ENV
          echo "DB_USER=$DB_USER" >> $GITHUB_ENV
          echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
          echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV

      # Add test data to MySQL database
      - name: Add test data to database
        run: |
          docker exec -i mysql-container mysql -u root -proot_password -e "CREATE DATABASE IF NOT EXISTS broadcast;"
          docker exec -i mysql-container mysql -u root -proot_password -e "USE broadcast; CREATE TABLE IF NOT EXISTS users (id INT AUTO_INCREMENT PRIMARY KEY, chatid BIGINT, status_bc TINYINT DEFAULT 0 NOT NULL);"
          docker exec -i mysql-container mysql -u root -proot_password -e "USE broadcast; INSERT INTO users (chatid) VALUES (5228446974), (5228446974);"

      # Set up virtual environment
      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
      - name: Install cryptography
        run: |
          source venv/bin/activate
          pip install cryptography

      # Install dependencies
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      # Run Python broadcast script
      - name: Run broadcast script
        env:
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_NAME: ${{ env.DB_NAME }}
        run: |
          echo env
          source venv/bin/activate
          python main.py
